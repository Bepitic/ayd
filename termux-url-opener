#!/bin/bash
RED='\033[0;31m'
GREEN='\033[0;32m'
BLUE='\033[0;34m'
YELLOW='\033[1;33m'
NC='\033[0m'
ARGS=$@
NARGS=$#
#echo -ne $BLUE "-> Updating Youtube-dl <-/r" $NC
#DYT_PID=$!

cd
ls
echo $HOME

WD_AYD=$(find $HOME -type d -name ayd )

upd()
{
    if [[ $(git -C $WD_AYD fetch --dry-run 2>&1 | wc -l) -gt 0 ]]; then
        echo -e $GREEN "Update found !" $NC
        #wait $DYT_PID
        ls $WD_AYD/update.sh
        #        exec $WD_AYD/update.sh $ARGS
        exit 1
    fi
    echo -e $YELLOW "Ayd it's up to date" $NC

    if [ $NARGS -eq 0 ]; then
        echo -e $BLUE "Instalation complete." $NC
        exit 0
    fi
}

upd

pip install --upgrade youtube-dl 1>/dev/null 2>>log.txt

#pip install --upgrade beets
#set -eu
#--download-archive ${CONFIG}.desc \
#wait $DYT_PID

if [[ $1 =~ ^.*youtu.*$ ]]; then

    echo -e ${YELLOW} "Youtube-dl" ${NC}
    TMP_DIR="$(mktemp -dt musica-dl.XXXXXX)"
    OUT_DIR="/storage/emulated/0/Music/musica-dl"
    CONFIG="${HOME}/.config/musica-dl"

    mkdir "${TMP_DIR}"/raw "${TMP_DIR}"/cooked

    youtube-dl \
        --ignore-errors \
        --write-thumbnail \
        --download-archive descargados-miniatura.txt \
        --skip-download \
        --output "${TMP_DIR}/cooked/%(title)s" \
        -- "$@" \
        1>/dev/null &


    youtube-dl \
        --ignore-errors \
        --download-archive descargados.txt \
        --format 'bestaudio' \
        --output "${TMP_DIR}/raw/%(title)s" \
        -- "$@"

    for file in "${TMP_DIR}/raw/"*; do
        ffmpeg \
            -hide_banner \
            -i "$file" \
            -codec:a libmp3lame \
            -qscale:a 2 \
            -vn \
            -map_metadata -1 \
            "${TMP_DIR}/cooked/${file##*/}.mp3"
        done

#       if command -v eyeD3 >/dev/null; then
#               eyeD3 --remove-all "${TMP_DIR}"/cooked/*.mp3
#       fi

mkdir -p "${OUT_DIR}"
cp -f "${TMP_DIR}"/cooked/* "${OUT_DIR}"
cd "${TMP_DIR}/cooked"
for file in * ; do
    echo $file
    mkdir -p ${OUT_DIR}/${file%%.*}
    cp ${file} ${OUT_DIR}/${file%%.*}/${file}
done

rm -rf "${TMP_DIR}"

elif [[ $1 =~ ^.*nourlselected.*$ ]]; then
    echo "ERROR1"
else
    echo Unhandled URL type: $1
fi
